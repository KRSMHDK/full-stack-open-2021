{"version":3,"sources":["components/Filter.js","components/Part.js","components/NumberForm.js","components/PhoneBookForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","Part","part","deletePerson","name","number","id","onClick","NumberForm","persons","filterPerson","filter","person","toLowerCase","includes","map","p","PhoneBookForm","newName","newNumber","handleNumberChange","handleNameChange","handleClick","type","baseUrl","axios","get","newObject","post","put","then","response","data","delete","Notification","message","messageType","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setMessageType","useEffect","personService","event","target","preventDefault","duplicateCheck","find","n","window","confirm","console","log","setTimeout","concat","parseInt","f","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df910d1c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input value={newFilter} onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Part = ({ part, deletePerson }) => {\n  return (\n    <div>\n      {\" \"}\n      <div>\n        {part.name} - {part.number}\n        <button value={part.id} onClick={deletePerson}>\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Part;\n","import React from \"react\";\nimport Part from \"./Part\";\n\nconst NumberForm = ({ persons, deletePerson, newFilter }) => {\n  const filterPerson = persons.filter((person) =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Numbers:</h2>\n      {filterPerson.map((p) => (\n        <Part part={p} deletePerson={deletePerson} />\n      ))}\n    </div>\n  );\n};\n\nexport default NumberForm;\n","import React from \"react\";\n\nconst PhoneBookForm = ({\n  newName,\n  newNumber,\n  handleNumberChange,\n  handleNameChange,\n  handleClick,\n}) => {\n  return (\n    <div>\n      <h2>add a new</h2>\n      <form>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button onClick={handleClick} type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PhoneBookForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deletePerson: deletePerson,\n};\n","import React from \"react\";\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={messageType}> {message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport NumberForm from \"./components/NumberForm\";\nimport PhoneBookForm from \"./components/PhoneBookForm\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const duplicateCheck = persons.find((person) => person.name === newName);\n\n    if (persons.find((n) => n.name.toLowerCase() === newName.toLowerCase())) {\n      const personPrompt = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one`\n      );\n\n      if (personPrompt === true) {\n        personService\n          .update(duplicateCheck.id, {\n            name: newName,\n            number: newNumber,\n          })\n          .then((response) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== duplicateCheck.id ? person : response\n              )\n            );\n            console.log(response);\n          });\n      }\n      setNewName(\"\");\n      setNewNumber(\"\");\n    } else {\n      const person = {\n        name: newName,\n        number: newNumber,\n      };\n      personService.create(person).then((response) => {\n        setMessageType(\"confirmation\");\n        setMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setPersons(persons.concat(response.data));\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const deletePerson = (event) => {\n    const id = parseInt(event.target.value);\n    const name = persons.find((f) => f.id === id).name;\n\n    personService.deletePerson(id).catch((error) => {\n      setMessageType(\"error\");\n      setMessage(`information of ${name} has already been removed from server`);\n      setTimeout(() => {\n        setMessage(null);\n        setMessageType(\"error\");\n      }, 5000);\n      setPersons(persons.filter((n) => n.id !== id));\n    });\n    setPersons(persons.filter((n) => n.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} messageType={messageType} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <PhoneBookForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleClick={addPerson}\n      />\n      <NumberForm\n        persons={persons}\n        newFilter={newFilter}\n        deletePerson={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}